<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.StudentMapper">
    <!--&lt;!&ndash;查询所有的学生信息，以及对应的老师信息:
      思路：
        1.查询所有的学生信息
        2.根据查询出来的学生的tid，寻找对应的老师  (子查询)
        -->
   <!-- <select id="getStudentList" resultMap="StudentTeacher">
        select * from student
    </select>
    <resultMap id="StudentTeacher" type="Student">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        &lt;!&ndash;复杂属性，需要单独处理
             对象使用：association
             集合使用：collection
        &ndash;&gt;
        <association column="tid" property="teacher" javaType="Teacher" select="getTeacher"/>
    </resultMap>
    <select id="getTeacher" resultType="Teacher">
    select * from teacher where id =#{asd};
    </select>-->

   <!-- 按照结果嵌套处理
        思路：
        1.查询所有的学生信息
        2.根据查询出来的学生的tid，寻找对应的老师-->
    <select id="getStudentList" resultMap="studentTeacher">
        SELECT s.id sid,s.name sname,t.name tname
        FROM student s ,teacher t
        where s.tid=t.id;
    </select>
    <resultMap id="studentTeacher" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <!--复杂类型-->
        <association property="teacher" javaType="Teacher">
            <result property="name" column="tname"/>
        </association>
    </resultMap>
</mapper>